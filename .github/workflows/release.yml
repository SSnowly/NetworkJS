name: Release

on:
  push:
    tags:
      - 'r*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for changelog generation
          fetch-tags: true

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Get tag name
        id: tag_name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get mod version from gradle.properties
        id: mod_version
        run: |
          MOD_VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_OUTPUT

      - name: Find jar file
        id: jar_file
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" -type f | head -1)
          JAR_NAME=$(basename "$JAR_FILE")
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git tag --sort=-version:refname | sed -n '2p')
          
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag, use all commits
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
          else
            # Get commits between previous tag and current tag
            CHANGELOG=$(git log $PREV_TAG..${{ steps.tag_name.outputs.TAG_NAME }} --pretty=format:"- %s" --no-merges)
          fi
          
          # If no changelog, provide a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- Initial release"
          fi
          
          # Save changelog to file and output
          echo "$CHANGELOG" > changelog.txt
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
          release_name: NetworkJS ${{ steps.tag_name.outputs.TAG_NAME }}
          body: |
            # NetworkJS ${{ steps.tag_name.outputs.TAG_NAME }}
            
            ## Changes in this release:
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            1. Download the jar file below
            2. Place it in your `mods` folder
            3. Make sure you have KubeJS installed
            
            ## Compatibility
            - Minecraft: 1.21.1
            - NeoForge: 21.1.200+
            - KubeJS: 2101.7.1-build.181+
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.jar_file.outputs.JAR_FILE }}
          asset_name: ${{ steps.jar_file.outputs.JAR_NAME }}
          asset_content_type: application/java-archive
